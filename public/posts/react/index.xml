<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>React Applications on Ahmad Hamze Homepage</title>
    <link>http://AhmadHamze.github.io/posts/react/</link>
    <description>Recent content in React Applications on Ahmad Hamze Homepage</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 23 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="http://AhmadHamze.github.io/posts/react/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Storybook with React</title>
      <link>http://AhmadHamze.github.io/posts/react/storybook-trivia-quiz/</link>
      <pubDate>Sun, 24 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>http://AhmadHamze.github.io/posts/react/storybook-trivia-quiz/</guid>
      <description>In this blog, I will be showing how to use Storybook with React and talk a bit about its benefits.
I have used Storybook during my first job as a frontend developer, and I enjoyed every moment of it.
What is Storybook Here&amp;rsquo;s a description from the official website
 Storybook is an open source tool for building UI components and pages in isolation. It streamlines UI development, testing, and documentation.</description>
    </item>
    
    <item>
      <title>A React Typescript Trivia Quiz</title>
      <link>http://AhmadHamze.github.io/posts/react/trivia-quiz/</link>
      <pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>http://AhmadHamze.github.io/posts/react/trivia-quiz/</guid>
      <description>This is a simple React + TypeScript + Storybook application, it&amp;rsquo;s a trivia quiz where the user answers a question and when all the questions are finished, they can see their score and the correct answers.
In this blog, I will go over the most important parts of the code, which you can find here.
Handling the data received from the API The code is in api/quizz-api.ts.
The first thing to do is to create a type that handles the response returned by the API.</description>
    </item>
    
  </channel>
</rss>
